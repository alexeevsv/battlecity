var Enum = require("enum");

function Bullet(playerPosition, direction, speed, playerNumber, bulletType) {

    this.position = {};
    this.direction = direction;
    this.speed = speed;
    this.interval;
    this.alive = false;
    this.playerNumber = playerNumber;
    this.damage = 0;


    this.start = function () {
        this.alive = true;
        switch (this.direction) {
            case directions.up:
                (function (me) {
                    me.interval = setInterval(function () {
                        if (me.position.y >= 0) {
                            me.position.y -= 4;
                        } else {
                            me.stop();
                        }
                    }, me.speed)
                })(this);
                break;
            case directions.down:
                (function (me) {
                    me.interval = setInterval(function () {
                        //TODO : изменить константу размера поля
                        if (me.position.y <= 512) {
                            me.position.y += 4;
                        } else {
                            me.stop();
                        }
                    }, me.speed)
                })(this);
                break;
            case directions.left:
                (function (me) {
                    me.interval = setInterval(function () {
                        if (me.position.x >= 0) {
                            me.position.x -= 4;
                        } else {
                            me.stop();
                        }
                    }, me.speed)
                })(this);
                break;
            case directions.right:
                (function (me) {
                    me.interval = setInterval(function () {
                        //TODO : изменить константу размера поля
                        if (me.position.x <= 512) {
                            me.position.x += 4;
                        } else {
                            me.stop();
                        }
                    }, me.speed)
                })(this);
                break;
        }
    }

    this.stop = function () {
        this.alive = false;
        clearInterval(this.interval);
    }

    this.setStartPosition = function (playerPosition, direction) {
        switch (direction) {
            case directions.up:
                this.position.x = playerPosition.x + 14;
                this.position.y = playerPosition.y;
                break;
            case directions.down:
                this.position.x = playerPosition.x + 14;
                this.position.y = playerPosition.y + 32;
                break;
            case directions.left:
                this.position.x = playerPosition.x;
                this.position.y = playerPosition.y + 14;
                break;
            case directions.right:
                this.position.x = playerPosition.x + 32;
                this.position.y = playerPosition.y + 14;
                break;
        }
    }

    this.setStartPosition(playerPosition, direction);

    this.calculateDamage = function(bulletType){
        if(Enum.weaponDamage[bulletType] !== undefined){
            this.damage = Enum.weaponDamage[bulletType];
        }
    }

    this.calculateDamage(bulletType);

}

var directions = {
    up: "up",
    down: "down",
    left: "left",
    right: "right"
};

module.exports = Bullet;