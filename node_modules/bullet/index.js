var Enum = require("enum");

function Bullet(playerPosition, direction, speed, playerNumber, bulletType) {

    this.position = {};
    this.direction = direction;
    this.speed = speed;
    this.interval;
    this.alive = false;
    this.playerNumber = playerNumber;
    this.damage = 0;

    this.calculateDamage(bulletType);
    this.setStartPosition(playerPosition, direction);

}

Bullet.prototype.start = function () {
    var self = this;

    self.alive = true;
    switch (this.direction) {
        case directions.up:
            self.interval = setInterval(function () {
                if (self.position.y >= 0) {
                    self.position.y -= 4;
                } else {
                    self.stop();
                }
            }, self.speed)
            break;
        case directions.down:
            self.interval = setInterval(function () {
                //TODO : изменить константу размера поля
                if (self.position.y <= 512) {
                    self.position.y += 4;
                } else {
                    self.stop();
                }
            }, self.speed)
            break;
        case directions.left:
            self.interval = setInterval(function () {
                if (self.position.x >= 0) {
                    self.position.x -= 4;
                } else {
                    self.stop();
                }
            }, self.speed)
            break;
        case directions.right:
            self.interval = setInterval(function () {
                //TODO : изменить константу размера поля
                if (self.position.x <= 512) {
                    self.position.x += 4;
                } else {
                    self.stop();
                }
            }, self.speed)
            break;
    }
}

Bullet.prototype.stop = function () {
    this.alive = false;
    clearInterval(this.interval);
}

Bullet.prototype.setStartPosition = function (playerPosition, direction) {
    switch (direction) {
        case directions.up:
            this.position.x = playerPosition.x + 14;
            this.position.y = playerPosition.y;
            break;
        case directions.down:
            this.position.x = playerPosition.x + 14;
            this.position.y = playerPosition.y + 32;
            break;
        case directions.left:
            this.position.x = playerPosition.x;
            this.position.y = playerPosition.y + 14;
            break;
        case directions.right:
            this.position.x = playerPosition.x + 32;
            this.position.y = playerPosition.y + 14;
            break;
    }
}

Bullet.prototype.calculateDamage = function (bulletType) {
    if (Enum.weaponDamage[bulletType] !== undefined) {
        this.damage = Enum.weaponDamage[bulletType];
    }
}

var directions = {
    up: "up",
    down: "down",
    left: "left",
    right: "right"
};

module.exports = Bullet;